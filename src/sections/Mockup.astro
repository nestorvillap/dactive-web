---
import mock1 from '@/assets/images/phone/mock1.png';
import mock2 from '@/assets/images/phone/mock2.png';
import mock3 from '@/assets/images/phone/mock3.png';
import Search from '@/assets/images/search.svg';

// Importaciones de iconos de deportes
import AirsoftIcon from '@/assets/images/icons/sports/Airsoft.png';
import AjedrezIcon from '@/assets/images/icons/sports/Ajedrez.png';
import BadmintonIcon from '@/assets/images/icons/sports/Bádminton.png';
import BaloncestoIcon from '@/assets/images/icons/sports/Baloncesto.png'; // Esta
import BalonmanoIcon from '@/assets/images/icons/sports/Balonmano.png';
import BeisbolIcon from '@/assets/images/icons/sports/Béisbol.png';
import BillarIcon from '@/assets/images/icons/sports/Billar.png';
import BocciaIcon from '@/assets/images/icons/sports/Boccia.png';
import BolosIcon from '@/assets/images/icons/sports/Bolos.png';
import CiclismoIcon from '@/assets/images/icons/sports/Ciclismo.png';
import CriquetIcon from '@/assets/images/icons/sports/Críquet.png';
import DardosIcon from '@/assets/images/icons/sports/Dardos.png';
import DeportesAdaptadosIcon from '@/assets/images/icons/sports/Deportes Adaptados.png';
import EscaladaIcon from '@/assets/images/icons/sports/Escalada.png';
import FrontenisIcon from '@/assets/images/icons/sports/Frontenis.png';
import FutbolIcon from '@/assets/images/icons/sports/Futbol.png'; // Esta
import GolfIcon from '@/assets/images/icons/sports/Golf.png';
import HockeyIcon from '@/assets/images/icons/sports/Hockey.png';
import KartingIcon from '@/assets/images/icons/sports/Karting.png';
import PadelIcon from '@/assets/images/icons/sports/Padel.png'; // Esta
import PaintballIcon from '@/assets/images/icons/sports/Paintball.png';
import PatinajeIcon from '@/assets/images/icons/sports/Patinaje.png';
import PetancaIcon from '@/assets/images/icons/sports/Petanca.png';
import PickleballIcon from '@/assets/images/icons/sports/Pickleball.png';
import PingPongIcon from '@/assets/images/icons/sports/Ping-pong.png';
import RugbyIcon from '@/assets/images/icons/sports/Rugby.png';
import RunningIcon from '@/assets/images/icons/sports/Running.png';
import SenderismoIcon from '@/assets/images/icons/sports/Senderismo.png';
import SkateboardIcon from '@/assets/images/icons/sports/Skateboard.png';
import SquashIcon from '@/assets/images/icons/sports/Squash.png';
import TenisIcon from '@/assets/images/icons/sports/Tenis.png';
import VoleibolIcon from '@/assets/images/icons/sports/Voleibol.png'; // Esta
import WaterpoloIcon from '@/assets/images/icons/sports/Waterpolo.png';
import shadowImage from '@/assets/images/balon/shadow.png';

// Función para generar claves de ID consistentes para los deportes
function sportToIdKey(sportName: string): string {
    return sportName
        .toLowerCase()
        .normalize("NFD")
        .replace(/[\u0300-\u036f]/g, "") // Quitar tildes
        .replace(/\s+/g, '-')           // Reemplazar espacios con guiones
        .replace(/[^a-z0-9-]/g, '');    // Quitar otros caracteres no alfanuméricos (excepto guion)
}

const sportsIconData = [
    { name: 'Airsoft', iconSrc: AirsoftIcon.src },
    { name: 'Ajedrez', iconSrc: AjedrezIcon.src },
    { name: 'Bádminton', iconSrc: BadmintonIcon.src },
    { name: 'Baloncesto', iconSrc: BaloncestoIcon.src, isFeatured: true, featuredWidth: 'w-[12%]' }, // Ejemplo: 12% de ancho
    { name: 'Balonmano', iconSrc: BalonmanoIcon.src },
    { name: 'Béisbol', iconSrc: BeisbolIcon.src },
    { name: 'Billar', iconSrc: BillarIcon.src },
    { name: 'Boccia', iconSrc: BocciaIcon.src },
    { name: 'Bolos', iconSrc: BolosIcon.src },
    { name: 'Ciclismo', iconSrc: CiclismoIcon.src },
    { name: 'Críquet', iconSrc: CriquetIcon.src },
    { name: 'Dardos', iconSrc: DardosIcon.src },
    { name: 'Deportes Adaptados', iconSrc: DeportesAdaptadosIcon.src },
    { name: 'Escalada', iconSrc: EscaladaIcon.src },
    { name: 'Frontenis', iconSrc: FrontenisIcon.src },
    { name: 'Fútbol', iconSrc: FutbolIcon.src, isFeatured: true, featuredWidth: 'w-[10%]' }, // Ejemplo: 10% de ancho
    { name: 'Golf', iconSrc: GolfIcon.src },
    { name: 'Hockey', iconSrc: HockeyIcon.src },
    { name: 'Karting', iconSrc: KartingIcon.src },
    { name: 'Pádel', iconSrc: PadelIcon.src, isFeatured: true, featuredWidth: 'w-[8%]' }, // Ejemplo: 15% de ancho
    { name: 'Paintball', iconSrc: PaintballIcon.src },
    { name: 'Patinaje', iconSrc: PatinajeIcon.src },
    { name: 'Petanca', iconSrc: PetancaIcon.src },
    { name: 'Pickleball', iconSrc: PickleballIcon.src },
    { name: 'Ping-pong', iconSrc: PingPongIcon.src },
    { name: 'Rugby', iconSrc: RugbyIcon.src },
    { name: 'Running', iconSrc: RunningIcon.src },
    { name: 'Senderismo', iconSrc: SenderismoIcon.src },
    { name: 'Skateboard', iconSrc: SkateboardIcon.src },
    { name: 'Squash', iconSrc: SquashIcon.src },
    { name: 'Tenis', iconSrc: TenisIcon.src },
    { name: 'Voleibol', iconSrc: VoleibolIcon.src, isFeatured: true, featuredWidth: 'w-[10%]' }, // Ejemplo: 8% de ancho
    { name: 'Waterpolo', iconSrc: WaterpoloIcon.src },
].map(data => ({ ...data, idKey: sportToIdKey(data.name) }));

const featuredSports = sportsIconData.filter(sport => sport.isFeatured);
---

<section class="mockup-section overflow-hidden relative flex flex-col gap-20 items-center justify-center max-w-[1440px] py-28 px-4 sm:px-8 md:px-20 mx-auto">
    <div id="anim-title">
        <h2 class="text-secondary font-black text-4xl sm:text-5xl text-center italic">EL PODER DE ELEGIR</h2>
        <p class="text-gray-500 italic text-center">¿Cómo funciona?</p>
    </div>

    <div class="w-full flex flex-col md:flex-row justify-center md:justify-between items-center gap-10 md:gap-4">
        <div class="relative w-[100%] md:-ml-[30%] order-1">
            <img src={mock1.src} alt="Mockup 1 - Selección de deporte" class="w-full" />
            <!-- Iconos superpuestos con sombra -->
            {featuredSports.map((sport, index) => {
                const positions = [
                    { top: '20%', left: '50%' },
                    { top: '30%', left: '65%' },
                    { top: '46%', left: '35%' },
                    { top: '65%', left: '45%' },
                ];
                const currentPosition = positions[index % positions.length];
                const widthClass = sport.featuredWidth || 'w-[10%]'; 
                
                const shadowClasses = `
                    absolute 
                    -translate-x-1/2 -translate-y-1/2 
                    translate-x-0.5 translate-y-0.5 /* Pequeño desplazamiento para la sombra (0.125rem) */
                    ${widthClass} aspect-square 
                    object-contain 
                    opacity-40 /* Opacidad de la sombra */
                    z-0 /* Sombra detrás del icono */
                `;

                const iconClasses = `
                    absolute 
                    -translate-x-1/2 -translate-y-1/2 
                    ${widthClass} aspect-square 
                    object-contain  
                    transition-opacity duration-300
                    z-10 /* Icono delante de la sombra */
                `;
                return (
                    <>
                        <img
                            src={shadowImage.src} 
                            alt="" 
                            class={shadowClasses}
                            style={`top: ${currentPosition.top}; left: ${currentPosition.left};`}
                        />
                        <img
                            src={sport.iconSrc}
                            alt={sport.name}
                            class={iconClasses}
                            style={`top: ${currentPosition.top}; left: ${currentPosition.left};`}
                        />
                    </>
                );
            })}
        </div>
        <div class="flex flex-col gap-4 md:gap-6 text-center md:text-left w-full md:w-auto md:min-w-48 order-2 items-center md:items-start">
            <h3 class="text-secondary font-semibold text-3xl md:text-4xl">LO QUE QUIERES</h3>
            <p class="text-xl md:text-2xl dark:text-white">Casi tantos deportes como quieras</p>

            <div class="relative max-w-xs mx-auto md:mx-0 w-full">
                <div class="absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-white pointer-events-none flex items-center justify-center">
                    <Search />
                </div>
                <input id="sport-search-input" type="text" placeholder="Buscar deportes" class="bg-secondary placeholder:text-white text-white not-italic pl-10 pr-4 py-2 w-full rounded-lg focus:outline-none focus:ring-2 focus:ring-primary text-shadow-md" />
                <div id="sport-search-result" class="absolute left-0 right-0 mt-1 z-10"></div>
            </div>
        </div>
    </div>

    <div class="w-full flex flex-col md:flex-row justify-center md:justify-between items-center gap-10 md:gap-4">
        <img src={mock2.src} alt="Mockup 2 - Selección de ubicación" class="w-[100%] md:-mr-[30%] order-2" />
        <div class="flex flex-col gap-4 md:gap-6 text-center md:text-left w-full md:w-auto md:min-w-48 order-2 md:order-1">
            <h3 class="text-secondary font-semibold text-3xl md:text-4xl">DÓNDE QUIERES</h3>
            <p class="text-xl md:text-2xl dark:text-white">Localizaciones privadas, públicas, naturales…</p>
        </div>
    </div>

    <div class="w-full flex flex-col md:flex-row justify-center md:justify-between items-center gap-10 md:gap-4">
        <img src={mock3.src} alt="Mockup 3 - Selección de jugadores" class="w-[100%] md:-ml-[30%] order-1" />
        <div class="flex flex-col gap-4 md:gap-6 text-center md:text-left w-full md:w-auto md:min-w-48 order-2">
            <h3 class="text-secondary font-semibold text-3xl md:text-4xl">CON QUIÉN QUIERES</h3>
            <p class="text-xl md:text-2xl dark:text-white">La plantilla de jugadores potenciales</p>
        </div>
    </div>
</section>

<!-- Contenedor para los datos de los iconos (oculto) -->
<div id="sport-icon-data-container" style="display: none;">
    {sportsIconData.map(data => (
        <span id={`sport-icon-${data.idKey}`} data-src={data.iconSrc}></span>
    ))}
</div>

<script>
    const sports = [
        'Airsoft', 'Ajedrez', 'Bádminton', 'Baloncesto', 'Balonmano', 'Béisbol', 'Billar', 
        'Boccia', 'Bolos', 'Ciclismo', 'Críquet', 'Dardos', 'Deportes Adaptados', 
        'Escalada', 'Frontenis', 'Fútbol', 'Golf', 'Hockey', 'Karting', 'Pádel', 
        'Paintball', 'Patinaje', 'Petanca', 'Pickleball', 'Ping-pong', 'Rugby', 
        'Running', 'Senderismo', 'Skateboard', 'Squash', 'Tenis', 'Voleibol', 'Waterpolo'
    ];

    function normalizeString(str: string): string {
        return str.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g, "");
    }

    // Función para generar claves de ID consistentes para los deportes en el cliente
    function sportToIdKeyClient(sportName: string): string {
        return sportName
            .toLowerCase()
            .normalize("NFD")
            .replace(/[\u0300-\u036f]/g, "") // Quitar tildes
            .replace(/\s+/g, '-')           // Reemplazar espacios con guiones
            .replace(/[^a-z0-9-]/g, '');    // Quitar otros caracteres no alfanuméricos (excepto guion)
    }

    function getIconPathForSport(sportName: string): string | null {
        const key = sportToIdKeyClient(sportName);
        const iconElement = document.getElementById(`sport-icon-${key}`);
        return iconElement?.getAttribute('data-src') ?? null;
    }

    function initializeSearch() {
        const searchInput = document.getElementById('sport-search-input') as HTMLInputElement;
        const searchResultContainer = document.getElementById('sport-search-result');

        if (!searchInput || !searchResultContainer) {
            console.error("No se encontraron los elementos de búsqueda (input o result container).");
            return;
        }

        searchInput.addEventListener('input', () => handleSearch(searchInput, searchResultContainer));

        document.addEventListener('click', (event) => {
            // Comprueba si el clic fue fuera del input y fuera del contenedor de resultados
            if (!searchInput.contains(event.target as Node) &&
                !searchResultContainer.contains(event.target as Node)) {
                // Solo limpia el contenedor de resultados si el input de búsqueda está vacío
                if (searchInput.value.trim() === '') {
                    searchResultContainer.innerHTML = '';
                }
            }
        });
    }

    function handleSearch(input: HTMLInputElement, resultContainer: HTMLElement) {
        const searchTerm = normalizeString(input.value.trim());
        resultContainer.innerHTML = '';

        if (searchTerm === '') return;

        const foundSport = findSport(searchTerm);
        displayResult(foundSport, resultContainer);
    }

    function findSport(searchTerm: string): string | undefined {
        const exactStart = sports.find(sport => normalizeString(sport).startsWith(searchTerm));
        if (exactStart) return exactStart;
        return sports.find(sport => normalizeString(sport).includes(searchTerm));
    }

    function displayResult(sport: string | undefined, container: HTMLElement) {
        const resultCard = document.createElement('div');
        resultCard.classList.add(
            'bg-secondary', 'mt-2', 'dark:bg-gray-800',
            'p-3', 'rounded-lg', 'shadow-md', 'text-sm',
            'w-full', 'text-shadow-md', 'text-white',
            'flex', 'items-center', 'gap-3'
        );

        if (sport) {
            const iconPath = getIconPathForSport(sport);

            if (iconPath) {
                const iconImg = document.createElement('img');
                iconImg.src = iconPath;
                iconImg.alt = sport;
                iconImg.classList.add('w-6', 'h-6', 'flex-shrink-0');
                
                iconImg.onerror = () => {
                    iconImg.remove(); // Si el icono no carga, se elimina
                };
                resultCard.appendChild(iconImg);
            } else {
                // Opcional: manejar si un deporte no tiene icono definido
                // console.warn(`Icono no encontrado para el deporte: ${sport}`);
            }

            const sportNameText = document.createElement('span');
            sportNameText.textContent = `Deporte encontrado: ${sport}`;
            resultCard.appendChild(sportNameText);

        } else {
            resultCard.textContent = 'Todavía no tenemos ese deporte.';
        }
        container.appendChild(resultCard);
    }

    initializeSearch();
</script>
