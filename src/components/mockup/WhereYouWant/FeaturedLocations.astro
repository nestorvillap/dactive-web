---
import mock2 from '@/assets/images/phone/mock2.png';
import mock2Shadow from '@/assets/images/phone/rightShadow.png';
---

<figure class="lg:col-span-2">
  <!-- Imagen de la mockup -->
  <div class="relative inline-block w-[115%] lg:w-full lg:ml-[15%]">
    <img
      src={mock2Shadow.src}
      alt=""
      class="absolute scale-200 inset-0 w-full h-full object-cover pointer-events-none"
      aria-hidden="true"
    />
    <img
      src={mock2.src}
      alt="Mapa"
      class="relative block w-full h-auto z-[1]"
      aria-hidden="true"
    />
    <!-- Puntos en el mapa -->
    <div class="map-pin" style="top: 12%; left: 60%;"></div>
    <div class="map-pin" style="top: 28%; left: 48%;"></div>
    <div class="map-pin" style="top: 38%; left: 70%;"></div>
  </div>
</figure>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const mapPinsNodeList = document.querySelectorAll('.map-pin');
    if (!mapPinsNodeList.length) return;

    const mapPinsArray = Array.from(mapPinsNodeList);

    const baseDelayIncrement = 250;
    const overallInitialDelay = 300;

    const observer = new IntersectionObserver((entries, obs) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const pinElement = entry.target;
          const pinIndex = mapPinsArray.findIndex(p => p === pinElement);

          if (pinIndex !== -1) {
            setTimeout(() => {
              pinElement.classList.add('is-visible');
            }, overallInitialDelay + pinIndex * baseDelayIncrement);
          } else {
            pinElement.classList.add('is-visible');
          }
          obs.unobserve(pinElement);
        }
      });
    }, { threshold: 0.4 });

    mapPinsArray.forEach(pin => {
      observer.observe(pin);
    });
  });
</script>

<style>
  .map-pin {
    position: absolute;
    width: 8%;
    aspect-ratio: 1;
    background-color: #f3bc30;
    border-radius: 50% 50% 50% 0;
    transform-origin: 0% 100%;
    box-shadow: -2px 2px 4px rgba(0,0,0,0.3);
    z-index: 10;
    opacity: 0;
    transform: rotate(-45deg) scale(0.5);
    transition: opacity 0.5s ease-out, transform 0.5s ease-out;
  }
  .map-pin.is-visible {
    opacity: 1;
    transform: rotate(-45deg) scale(1);
  }
  .map-pin::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 35.7%;
    height: 35.7%;
    background-color: white;
    border-radius: 50%;
    transform: translate(-50%, -50%);
  }
</style>